// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

// ---- Run Schema Changes @ planetscale ---
// ---- npx prisma db push -----------------
// -----------------------------------------

model Code {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  CodeValues  CodeValues[]
}

model CodeValues {
  id       Int     @id @default(autoincrement())
  codeId   Int
  Code     Code?   @relation(fields: [codeId], references: [id])
  name     String
  value    String
  isActive Boolean
  Staff    Staff[]

  @@index([id])
}

model Users {
  id          Int      @id @default(autoincrement())
  displayName String
  familyName  String
  givenName   String
  email       String
  photoUrl    String
  googleId    String
  Hostel      Hostel[]
  Staff       Staff[]

  @@index([id])
}

model Hostel {
  id        Int     @id @default(autoincrement())
  name      String
  address   String
  pinPlace  String
  city      String
  state     String
  pincode   String
  country   String
  primaryId Int
  Users     Users?  @relation(fields: [primaryId], references: [id])
  Staff     Staff[]
  Floor     Floor[]

  @@index([id])
}

model Staff {
  id         Int         @id @default(autoincrement())
  hostelId   Int
  Hostel     Hostel?     @relation(fields: [hostelId], references: [id])
  userId     Int
  Users      Users?      @relation(fields: [userId], references: [id])
  roleId     Int
  CodeValues CodeValues? @relation(fields: [roleId], references: [id])

  @@index([id])
}

model Floor {
  id       Int     @id @default(autoincrement())
  hostelId Int
  Hostel   Hostel? @relation(fields: [hostelId], references: [id])
  roomId   Int
  Room     Room[]
}

model Room {
  id      Int    @id @default(autoincrement())
  floorId Int
  Floor   Floor? @relation(fields: [floorId], references: [id])
  beds    Int
  type    Int
}

model Assets {
  id         Int    @id @default(autoincrement())
  categoryId Int
  groupId    Int
  name       String
  desc       String
  cost       String
}
